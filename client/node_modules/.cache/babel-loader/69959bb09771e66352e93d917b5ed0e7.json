{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avillalba\\\\Desktop\\\\breakfast-list\\\\client\\\\src\\\\components\\\\Schedule.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '2%',\n    overflowX: 'auto',\n    // margin: 'auto',\n    marginLeft: '5%'\n  },\n  table: {\n    minWidth: 650\n  },\n  button: {\n    margin: theme.spacing(1),\n    textAlign: 'center'\n  },\n  input: {\n    display: 'none'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    backgroundColor: 'white',\n    width: 500,\n    marginTop: '10%',\n    marginLeft: '37%'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n    color: 'white'\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  },\n  schedule: {\n    width: '35%',\n    float: 'left'\n  },\n  title: {\n    textAlign: 'center'\n  }\n}));\nexport default function Schedule() {\n  useEffect(() => {\n    getWorkers();\n  }, []); // React States\n\n  const [workersFetched, setWorkers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [newWorkerName, setNewWorkerName] = useState('');\n  const [newWorkerDate, setNewWorkerDate] = useState(null);\n  const classes = useStyles(); // Fetch workers from database\n\n  const getWorkers = async () => {\n    try {\n      const workersFetched = await axios.get(`/workers`);\n\n      if (workersFetched.data.length > 0 || workersFetched.data.length === 0) {\n        setLoading(false);\n      }\n\n      setWorkers([...workersFetched.data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Handle new worker data\n\n\n  const handleNewWorkerName = e => {\n    setNewWorkerName(e.target.value);\n  };\n\n  const handleNewWorkerDate = e => {\n    setNewWorkerDate(e.target.value);\n  }; // Save new worker in the database.\n\n\n  const save = async e => {\n    e.preventDefault();\n    const workerToSave = {\n      name: newWorkerName,\n      date: newWorkerDate\n    };\n\n    try {\n      await axios.post(`/worker`, workerToSave);\n    } catch (error) {\n      console.error('aaaa', error);\n    }\n  }; // Delete a worker from the database.\n\n\n  const deleteWorker = async id => {\n    try {\n      axios.delete(`/worker/${id}`);\n      getWorkers();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return loading ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(\"div\", {\n    className: classes.schedule,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Schedule\"), React.createElement(Paper, {\n    className: classes.root,\n    xs: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Date\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, workersFetched.map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"YYYY-MM-DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, row.date)), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    className: classes.margin,\n    onClick: e => deleteWorker(row._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))))))), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      setOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Add\")), React.createElement(Modal, {\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: e => save(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-name\",\n    label: \"Name\",\n    className: classes.textField,\n    onChange: e => handleNewWorkerName(e),\n    margin: \"normal\",\n    required: true,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"date\",\n    label: \" \",\n    onChange: e => handleNewWorkerDate(e),\n    className: classes.textField,\n    margin: \"normal\",\n    type: \"date\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    onClick: () => {\n      setOpen(false);\n      getWorkers();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Close\")))));\n}","map":{"version":3,"sources":["C:/Users/avillalba/Desktop/breakfast-list/client/src/components/Schedule.js"],"names":["React","useEffect","useState","axios","Moment","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Modal","Button","TextField","IconButton","DeleteIcon","useStyles","theme","root","marginTop","overflowX","marginLeft","table","minWidth","button","margin","spacing","textAlign","input","display","container","flexWrap","backgroundColor","width","textField","marginRight","color","dense","menu","schedule","float","title","Schedule","getWorkers","workersFetched","setWorkers","loading","setLoading","open","setOpen","newWorkerName","setNewWorkerName","newWorkerDate","setNewWorkerDate","classes","get","data","length","error","console","log","handleNewWorkerName","e","target","value","handleNewWorkerDate","save","preventDefault","workerToSave","name","date","post","deleteWorker","id","delete","map","row","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: '2%',\r\n    overflowX: 'auto',\r\n    // margin: 'auto',\r\n    marginLeft: '5%',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    backgroundColor: 'white',\r\n    width: 500,\r\n    marginTop: '10%',\r\n    marginLeft: '37%',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n    color: 'white',\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n  schedule: {\r\n    width: '35%',\r\n    float: 'left',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nexport default function Schedule() {\r\n  useEffect(() => {\r\n    getWorkers();\r\n  }, []);\r\n\r\n  // React States\r\n  const [workersFetched, setWorkers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [newWorkerName, setNewWorkerName] = useState('');\r\n  const [newWorkerDate, setNewWorkerDate] = useState(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  // Fetch workers from database\r\n  const getWorkers = async () => {\r\n    try {\r\n      const workersFetched = await axios.get(`/workers`);\r\n      if (workersFetched.data.length > 0 || workersFetched.data.length === 0) {\r\n        setLoading(false);\r\n      }\r\n      setWorkers([...workersFetched.data]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Handle new worker data\r\n  const handleNewWorkerName = (e) => {\r\n    setNewWorkerName(e.target.value);\r\n  };\r\n\r\n  const handleNewWorkerDate = (e) => {\r\n    setNewWorkerDate(e.target.value);\r\n  };\r\n\r\n  // Save new worker in the database.\r\n  const save = async (e) => {\r\n    e.preventDefault();\r\n    const workerToSave = {\r\n      name: newWorkerName,\r\n      date: newWorkerDate,\r\n    };\r\n    try {\r\n      await axios.post(`/worker`, workerToSave);\r\n    } catch (error) {\r\n      console.error('aaaa', error);\r\n    }\r\n  };\r\n\r\n  // Delete a worker from the database.\r\n  const deleteWorker = async (id) => {\r\n    try {\r\n      axios.delete(`/worker/${id}`);\r\n      getWorkers();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <h3>Loading...</h3>\r\n  ) : (\r\n    <div className={classes.schedule}>\r\n      <h1 className={classes.title}>Schedule</h1>\r\n      <Paper className={classes.root} xs=\"6\">\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {workersFetched.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Moment format=\"YYYY-MM-DD\">{row.date}</Moment>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    className={classes.margin}\r\n                    onClick={(e) => deleteWorker(row._id)}\r\n                  >\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Paper>\r\n\r\n      <Modal open={open}>\r\n        <div>\r\n          <form className={classes.container} onSubmit={(e) => save(e)}>\r\n            <TextField\r\n              id=\"standard-name\"\r\n              label=\"Name\"\r\n              className={classes.textField}\r\n              onChange={(e) => handleNewWorkerName(e)}\r\n              margin=\"normal\"\r\n              required\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              id=\"date\"\r\n              label=\" \"\r\n              onChange={(e) => handleNewWorkerDate(e)}\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              type=\"date\"\r\n              required\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                setOpen(false);\r\n                getWorkers();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}